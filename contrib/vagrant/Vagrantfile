# -*- mode: ruby -*-
# # vi: set ft=ruby :

require 'fileutils'

Vagrant.require_version ">= 1.6.0"

CONFIG = File.join(File.dirname(__FILE__), "vagrant_config.rb")
GITCONFIG = `cat $HOME/.gitconfig`

VAGRANTFILE_API_VERSION = "2"

# Devstack init script
$script = <<SCRIPT
#!/bin/bash
set -e

DEBIAN_FRONTEND=noninteractive sudo apt-get -qqy update || sudo yum update -qy
DEBIAN_FRONTEND=noninteractive sudo apt-get install -qqy git || sudo yum install -qy git
pushd ~

# Copy over git config
cat << EOF > /home/vagrant/.gitconfig
#{GITCONFIG}
EOF

git clone https://git.openstack.org/openstack-dev/devstack

rsync -av --exclude='.tox' --exclude='.venv' --exclude='.vagrant' --exclude='contrib/vagrant' /home/vagrant/cue /opt/stack

if [ -f "/home/vagrant/python-cueclient" ]; then
    rsync -av --exclude='.tox' --exclude='.venv' --exclude='.vagrant' --exclude='contrib/vagrant' /home/vagrant/python-cueclient /opt/stack
fi

# Install Vagrant local.conf sample
if [ ! -f "/home/vagrant/devstack/local.conf" ]; then
    cp /opt/stack/cue/contrib/devstack/local.conf /home/vagrant/devstack/local.conf
fi

for f in extras.d/* lib/*; do
    if [ ! -f "/home/vagrant/devstack/$f" ]; then
        ln -fs /opt/stack/cue/contrib/devstack/$f -t /home/vagrant/devstack/$(dirname $f)
    fi
done

SCRIPT

# Defaults for config options
$hostname = File.basename(File.dirname(__FILE__))
$forwarded_port = 8795
$install_devstack = false
$install_build_deps = true
$install_tmate = false
$vm_memory = 4096 
$vm_cpus = 2

if File.exist?(CONFIG)
  require CONFIG
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.network "forwarded_port", guest: $forwarded_port, host: $forwarded_port

  config.vm.provider "virtualbox" do |v|
    v.memory = $vm_memory
    v.cpus = $vm_cpus
  end

  config.vm.provider "vmware_fusion" do |v, override|
    v.vmx["memsize"] = $vm_memory
    v.vmx["numvcpus"] = $vm_cpus
    override.vm.box = "sputnik13/trusty64"
    v.vmx["vhv.enable"] = TRUE
    v.vmx["ethernet0.virtualdev"] = "vmxnet3"
  end

  config.vm.synced_folder "../..", "/home/vagrant/cue"

  if File.directory?("../../../python-cueclient")
    config.vm.synced_folder "../../../python-cueclient", "/opt/stack/python-cueclient"
  end

  config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"

  config.vm.define "ubuntu" do |ubuntu|
    ubuntu.vm.box = "rhefner/devstack-dependencies"
    ubuntu.vm.hostname = "cuedev-ubuntu"

    ubuntu.vm.provision :shell, :privileged => true, :inline => "DEBIAN_FRONTEND=noninteractive apt-get update"
    ubuntu.vm.provision :shell, :privileged => true, :inline => "DEBIAN_FRONTEND=noninteractive apt-get install --yes git"
    ubuntu.vm.provision :shell, :privileged => true, :inline => "DEBIAN_FRONTEND=noninteractive apt-get install --yes python-software-properties software-properties-common"
    ubuntu.vm.provision :shell, :privileged => true, :inline => "mkdir /opt/stack"
    ubuntu.vm.provision :shell, :privileged => true, :inline => "chown vagrant /opt/stack"
    ubuntu.vm.provision :shell, :privileged => false, :inline => $script

    # Install tmate [optional]
    if $install_tmate
      ubuntu.vm.provision "shell", inline: "sudo add-apt-repository ppa:nviennot/tmate"
      ubuntu.vm.provision "shell", inline: "sudo apt-get update"
      ubuntu.vm.provision "shell", inline: "sudo apt-get install -y tmate"
    end

    # Remove anything unnecessary
    ubuntu.vm.provision "shell", inline: "apt-get autoremove -y"
  end

  config.vm.define "fedora" do |fedora|
    fedora.vm.box = "box-cutter/fedora20"
    fedora.vm.hostname = "cuedev-fedora"

    fedora.vm.provision :shell, :privileged => true, :inline => "yum update -y vim-minimal" # RH Bug 1066983
    fedora.vm.provision :shell, :privileged => true, :inline => "yum install -y git-core MySQL-python"

    fedora.vm.provision :shell, :privileged => false, :inline => $script
  end
end
